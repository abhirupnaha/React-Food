{"ast":null,"code":"var _jsxFileName = \"/home/abhirup/Code/Projects/React-Food/frontend/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim().length === 0;\n\nconst isNot5Chars = value => value.trim().length < 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    city: true,\n    street: true,\n    postal: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const orderHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = !isNot5Chars(enteredPostal);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postal: enteredPostalIsValid\n    });\n    const formIsValid = enteredCityIsValid && enteredNameIsValid && enteredPostalIsValid && enteredStreetIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredCity,\n      postal: enteredPostal,\n      city: enteredCity\n    });\n  };\n\n  const nameClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const postalClasses = `${classes.control} ${formInputsValidity.postal ? '' : classes.invalid}`;\n  const cityClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: orderHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \" Your Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \" Please entered a valid name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \" Street \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \" Please entered a valid street \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \" Postal Code \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \" Please entered a valid postal code \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \" City \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \" Please entered a valid city name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \" Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: classes.submit,\n        children: \" Order \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"bou9ck0bB8UZl5Gj7Ll7VFrBZ3Y=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","length","isNot5Chars","Checkout","props","formInputsValidity","setFormInputsValidity","name","city","street","postal","nameInputRef","streetInputRef","postalInputRef","cityInputRef","orderHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredCityIsValid","enteredStreetIsValid","enteredPostalIsValid","formIsValid","onConfirm","nameClasses","control","invalid","streetClasses","postalClasses","cityClasses","form","color","actions","onCancel","submit"],"sources":["/home/abhirup/Code/Projects/React-Food/frontend/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react';\n\nimport classes from './Checkout.module.css';\n\nconst isEmpty = value => value.trim().length === 0;\nconst isNot5Chars = value => value.trim().length < 5;\n\nconst Checkout = (props) => {\n    const [ formInputsValidity, setFormInputsValidity ] = useState({\n        name: true,\n        city: true,\n        street: true,\n        postal: true\n    });\n\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const postalInputRef = useRef();\n    const cityInputRef = useRef();\n\n    const orderHandler = (event) => {\n        event.preventDefault();\n        \n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostal = postalInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n        const enteredNameIsValid = !isEmpty(enteredName);\n        const enteredCityIsValid = !isEmpty(enteredCity);\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\n        const enteredPostalIsValid = !isNot5Chars(enteredPostal);\n\n        setFormInputsValidity({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            city: enteredCityIsValid,\n            postal: enteredPostalIsValid\n        });\n\n        const formIsValid = (\n            enteredCityIsValid &&\n            enteredNameIsValid &&\n            enteredPostalIsValid &&\n            enteredStreetIsValid\n        );\n\n\n        if(!formIsValid) {\n            return;\n        }\n\n        props.onConfirm({\n            name: enteredName,\n            street: enteredCity,\n            postal: enteredPostal,\n            city: enteredCity\n        });\n    };\n\n    const nameClasses = `${classes.control} ${\n        formInputsValidity.name? '' : classes.invalid\n    }`;\n    const streetClasses = `${classes.control} ${\n        formInputsValidity.street? '' : classes.invalid\n    }`;\n    const postalClasses = `${classes.control} ${\n        formInputsValidity.postal? '' : classes.invalid\n    }`;\n    const cityClasses = `${classes.control} ${\n        formInputsValidity.city? '' : classes.invalid\n    }`\n\n    return (\n        <form className={classes.form} onSubmit={orderHandler}>\n            <div className={nameClasses}>\n                <label htmlFor='name'> Your Name </label>\n                <input type='text' id='name' ref={nameInputRef}/>\n                {!formInputsValidity.name && <p style={{ color: 'red'}}> Please entered a valid name </p>}\n            </div>\n            <div className={streetClasses}>\n                <label htmlFor='street'> Street </label>\n                <input type='text' id='street' ref={streetInputRef}/>\n                {!formInputsValidity.street && <p style={{ color: 'red'}}> Please entered a valid street </p>}\n            </div>\n            <div className={postalClasses}>\n                <label htmlFor='postal'> Postal Code </label>\n                <input type='text' id='postal' ref={postalInputRef}/>\n                {!formInputsValidity.postal && <p style={{ color: 'red'}}> Please entered a valid postal code </p>}\n            </div>\n            <div className={cityClasses}>\n                <label htmlFor='city'> City </label>\n                <input type='text' id='city' ref={cityInputRef}/>\n                {!formInputsValidity.city && <p style={{ color: 'red'}}> Please entered a valid city name </p>}\n            </div>\n            <div className={classes.actions}>\n                <button type='button' onClick={props.onCancel}> Cancel </button>\n                <button type='submit' className={classes.submit}> Order </button>\n            </div>\n        </form>\n    )\n};\n\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module"}