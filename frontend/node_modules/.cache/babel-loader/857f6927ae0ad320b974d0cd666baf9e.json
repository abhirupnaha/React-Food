{"ast":null,"code":"var _jsxFileName = \"/home/abhirup/Code/Projects/React-Food/frontend/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      // const updateItem = state.items.concat(action.item);\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      const pos = state.items.findIndex(item => item.id === action.item.id);\n\n      if (state.items[pos]) {\n        const updateItem = { ...state.items[pos],\n          amount: state.items[pos].amount + action.item.amount\n        };\n        const updateList = [...state.items];\n        updateList[pos] = updateItem;\n        return {\n          items: updateList,\n          totalAmount: updatedTotalAmount\n        };\n      } else {\n        return {\n          items: [...state.items, action.item],\n          totalAmount: updatedTotalAmount\n        };\n      }\n\n    case \"REMOVE\":\n      const pos2 = state.items.findIndex(item => item.id === action.id);\n      const updatedTotalAmount2 = state.totalAmount - state.items[pos2].price;\n\n      if (state.items[pos2].amount === 1) {\n        // const newList = new Array(state.items.filter( item => item.id !== action.id)) // does not work?\n        const newList = state.items.filter(item => item.id !== action.id); // works\n\n        return {\n          items: newList,\n          totalAmount: updatedTotalAmount2\n        };\n      } else {\n        const updatedItem = state.items[pos2].amount - 1;\n        const updatedList = [...state.items];\n        updatedList[pos2].amount = updatedItem;\n        return {\n          items: updatedList,\n          totalAmount: updatedTotalAmount2\n        };\n      }\n\n    case \"CLEAR\":\n      return { ...defaultCartState\n      };\n\n    default:\n      return defaultCartState;\n  }\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const clearItemsHandler = () => dispatchCartAction({\n    type: 'CLEAR'\n  });\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler,\n    clearItems: clearItemsHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: { ...cartContext\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"/9NfHkzRcS4ZBUY4y/fayBXiE2o=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","pos","findIndex","id","updateItem","updateList","pos2","updatedTotalAmount2","newList","filter","updatedItem","updatedList","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","clearItemsHandler","cartContext","addItem","removeItem","clearItems","children"],"sources":["/home/abhirup/Code/Projects/React-Food/frontend/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    switch(action.type) {\n        case \"ADD\":\n            // const updateItem = state.items.concat(action.item);\n            const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n            const pos = state.items.findIndex(item => item.id === action.item.id);\n\n            if(state.items[pos]) {\n                const updateItem = {...state.items[pos], amount: state.items[pos].amount + action.item.amount};\n                const updateList = [...state.items];\n                updateList[pos] = updateItem;\n                return { items: updateList, totalAmount: updatedTotalAmount };\n            }\n            else {\n                return {\n                    items: [ ...state.items, action.item],\n                    totalAmount: updatedTotalAmount\n                };\n            }\n        \n        case \"REMOVE\":\n            const pos2 = state.items.findIndex(item => item.id === action.id);\n            const updatedTotalAmount2 = state.totalAmount - state.items[pos2].price;\n\n            if(state.items[pos2].amount === 1) {\n                // const newList = new Array(state.items.filter( item => item.id !== action.id)) // does not work?\n                const newList = state.items.filter( item => item.id !== action.id); // works\n                return { items: newList, totalAmount: updatedTotalAmount2 };\n            }\n            else {\n                const updatedItem = state.items[pos2].amount - 1;\n                const updatedList = [...state.items];\n                updatedList[pos2].amount = updatedItem;\n                return { items: updatedList, totalAmount: updatedTotalAmount2 };\n            }\n        \n        case \"CLEAR\":\n            return { ...defaultCartState };\n\n        default:\n            return defaultCartState;\n    }\n}\n\nconst CartProvider = (props) => {\n    const [ cartState, dispatchCartAction ] = useReducer(cartReducer, defaultCartState);\n\n    const addItemHandler = (item) => {\n        dispatchCartAction({type: \"ADD\", item: item});\n    };\n\n    const removeItemHandler = (id) => {\n        dispatchCartAction({type: \"REMOVE\", id: id});\n    };\n\n    const clearItemsHandler = () => dispatchCartAction({type: 'CLEAR'});\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemHandler,\n        removeItem: removeItemHandler,\n        clearItems: clearItemsHandler\n    }\n\n    return (\n        <CartContext.Provider value={{...cartContext}}>\n            {props.children}\n        </CartContext.Provider>\n    );\n};\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}